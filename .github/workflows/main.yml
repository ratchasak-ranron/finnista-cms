# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  IMAGE_NAME: finnista-cms
  REGISTRY_NAME: ratchasak
  IMAGE_PULL_SECRET: registry-ratchasak
  HOME: /root

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clear repository
        run: sudo rm -fr $GITHUB_WORKSPACE && mkdir $GITHUB_WORKSPACE

      - uses: actions/checkout@v3

      - name: Install doctl # install the doctl on the runner
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      #Dev Build
      - name: Build image dev
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --build-arg="ENV_FOR_BUILD=dev"

      #Dev Push
      - name: Push image dev
        run: |
          doctl registry login --expiry-seconds 600
          docker tag $IMAGE_NAME registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME
          docker push registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME

      - name: Update deployment file
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<BUILD_TAG>|'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml
          TAG=$(echo "registry.digitalocean.com/$REGISTRY_NAME/$IMAGE_NAME") && sed -i 's|<IMAGE>|'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml
          TAG=$(echo "$IMAGE_PULL_SECRET") && sed -i 's|<IMAGE_PULL_SECRET>|'${TAG}'|' $GITHUB_WORKSPACE/deployment.yaml
          cat $GITHUB_WORKSPACE/deployment.yaml

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 k8s-1-15-5-do-0-sgp1-1572680805179

      - uses: azure/setup-kubectl@v1
        with:
          version: "v1.16.2" # default is latest stable
        id: install

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment.yaml

      - name: Verify deployment
        run: kubectl rollout status deployment/$IMAGE_NAME
